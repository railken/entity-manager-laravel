<?php

namespace $NAMESPACE$;

use Railken\Laravel\Manager\Contracts\EntityContract;
use Railken\Laravel\Manager\Contracts\ModelValidatorContract;
use Railken\Laravel\Manager\ParameterBag;
use Illuminate\Support\Collection;
use $NAMESPACE$\Exceptions as Exceptions;
use Respect\Validation\Validator as v;


class $NAME$Validator implements ModelValidatorContract
{

	/**
	 * Validate "name"
	 *
	 * @param EntityContract $entity
	 * @param ParameterBag $parameters
	 *
	 * @return Collection
	 */
	public function validateName(EntityContract $entity, ParameterBag $parameters)
	{
		$errors = new Collection();

		!$entity->exists && !$parameters->exists('name') &&
			$errors->push(new Exceptions\$NAME$NameNotDefinedException($parameters->get('name')));

		$parameters->exists('name') &&
			!v::length(2,255)->validate($parameters->get('name')) &&
			$errors->push(new Exceptions\$NAME$NameNotValidException($parameters->get('name')));

		return $errors;
	}


}
